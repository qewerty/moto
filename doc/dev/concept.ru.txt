Концепция и некоторые детали системы процедурного моделирования и анимации Moto
===============================================================================

Общие положения
---------------

Moto является системой основанной на произвольном направленном ацикличном графе,
в отличии напирмер от GEGL, где граф ограничивается деревом. Ноды графа Moto
могут эффективно использоваться для различного рода задач от анимации и
моделирования (с сохранением истории) до задач композитинга.

Ноды в Moto могут иметь произвольное кол-во параметров, параметры могут быть
IN, OUT или INOUT. Основные два вида параметров: статические и динамические,
статические параметры создаются во время создания ноды и не могут быть удалены,
динамические параметры так же могут создаваться вместе с нодой, как и в любое
другое время, например пользователем, но в любом случае они могут быть удалены.
Таким образом статические параметры являются частью интерфейса ноды и на них
всегда можно расчитывать в экземплярах типа этой ноды и во всех экземплярах
производных типов.

Параметры объеденяются в группы для удобного отображения их в GUI. Группы
это всего лишь визуальное разделение параметров и признак родства
нескольких параметров.

Параметры могут быть объеденены в списке. Это значит что все параметры в
этом списке интерпритируются нодой как одно целое. Пользователь может в
процессе работы программы создавать и удалять параметры из списка. Список
должен содержать не менее одного параметра. Типичное применение, например,
нода Morph(BlendShape), где на вход может подаваться любое кол-во мешей
с одинаковой топологией и затем они интерполируются согласно специальным
параметрам для этого предназначенным.

Параметры могут находится в двух состояниях: рабочем и заблокированном.

Параметры могут завистить друг от друга, например при включении какого-нибудь
параметра флага возможно разблокирование другого параметра.

Параметры могут быть любых типов от простых до типов ссылки на объект.

Параметры могут получать своё значени тремя способами: непосредсвенное указание
значения (возможно только для простных типов, строк, чисел, enum'ов), линковка
с другим параметром другой ноды (OUT к IN) возможна для всех параметров режима
IN или INOUT, а также выражение (также для IN и INOUT). Выражения вычисляется
нодой и возвращаемое значение используется как значение параметра. Могут быть
любые типы значений, если тип выражения не совместим с типом параметра, значение
игнорируется и используется собственное значение параметра.

Параметры могут быть однородными (uniform) и изменяющимися (varying), однородные
параметры могут принимать только одного значение в одном кадре, а изменяющиеся
параметры могут изменять своё значение в течение кадра. Например, нода может
вычислять параметры не один раз на кадр, а для каждого своего элемента отдельно
в одном и том же кадре.

Ноды могут быть вложенными. И более того, непосредственное соеденение параметров
возможно лишь для нод имеющих общего родителя. Однако возможен проброс параметра
наверх через родительскую ноду.

Ноды имеют набор действий, которые доступны из специального меню в зависимости
от выбранной ноды. Этот набор полностью определеяется типом ноды.

Рабочий процесс
---------------

Сцена Moto имеет текущий объект (может быть пустым), текущую камеру (может быть
пустой). Из текущего объекта всегда можно получить ноду GeometryView если она
есть. Нода GeometryView определяет процесс моделирования (возможные операции),
режимы выделения и др. При выборе операции она выполняется над геометрией,
которая передаётся в ноду вида, т.е. вставляется между нодой геометрии и нодой
вида, запоминая (копируя) текущее выделение из ноды вида.

Анимация параметров
-------------------

Любой параметр может быть анимирован, для этого возможно автоматическое создание
аниматоров для различных типов параметров. Для типов float в общем случае 
создаются кривые интерполяции, для типа int ступенчатые кривые, для enum и строк
линии хронологии значений. Каждый тип аниматора может определять свои опции и
интерфейс редактирования, напимер, интерполяции для float могут использовать
различные функции интерполяции на разных сегментах кривой. Кроме того иногда
возможно конвертирование типов аниматоров в другие типы параметров int->float,
float->int (с отсечение дробной части) и даже enum->int/float (хотя в этом
мало смысла). Аниматоры строк, в общем случае, не возможно ни во что конвертировать,
разве что если строка содержит числа можно преобразовать их к int или float.

Скелетная анимация
------------------

В качестве суставов могут быть использованы любые ноды трансформации.

Рендеринг
---------

Экспорт данных сцены осуществляется следующим образом. Все потомки ноды
Geometry могут создавать эффективные описания создаваемых примитивов для
различных рендереров, если рендерер их поддерживает. Или может конвертировать
описание примитивов в то, что поддерживается рендерером. Если к геометрии были
применены операции моделирования, то для них могут использоваться общие
алгоритмы экспорта, например, генерация полигонального меша или нурбс патчей.

Ноды наследники GeometryView могут управлять процессом экспорта, например, нода
MeshView может использовать данные меша или же генерировать более эффективную
структуру (сфера, диск), если получает данные геометрии непостредсвенно из
генератора геометрии (ноды Geometry).

Сабдивы также в включаются в MeshView с опициями для отображения во вьюпорте
и рендеринге. Также может быть использована операция Subdivide(MeshOp).

Кроме этого, для ноды GeometryView могут создаваться дополнительные динамические
входные параметры для генераторов, к которым подключаются ноды генераторы
данных для рендереров. Таким образом возможно создание нескольких принципиально
разлиных геометрий для рендеринга на основе одной геометрии моделирования.

Также существуют специальные ноды рендеринга, определяющие 1 или
несколько (автоматические проходы для теней, например) проходов рендеринга.
При создании описания сцены из графа Moto они могут игнорировать генераторы
для не своего рендерера.

Undo/Redo
---------

В виду организации данных в формальной форме графа, все операции над системой
можно свести к нескольким операциям: создание ноды, удаление ноды, изменение
значения параметра, соеденение параметров, разъеденение параметров. Эти
операция легко обращаются, т.к. все кроме изменения значения параметра 
имеют обратные операции, но и изменение значения легко обратить.

Все остальные операции могут быть выражены комбинацией этих примитивных
операций, которые для Undo/Redo можно оформлять в группы транзакции.



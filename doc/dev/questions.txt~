Some questions which must be solved
===================================

 * How should matricies and vectors be provided to Python binding if in
   Moto core they are represented as plain arrays? Solution must be
   simple, effective and convinient*** for script authors.
   
   There is an idea just to create a Python object that holds pointer to
   matrix or vector (or smth other). This object places in instance of
   PyGObject wrapper class. Object may be created once on demand. This makes it
   possible to save memory if we need no a matrix or time if we often use it.
   
 * How can I override virtual method of GObjectClass in Python?
 
   There is a solution inspired by Boost.Python. I can redefine virtual method
   in PyGObject wrapper class and check is method overriden in Python or not.
   Then call C or Python implementaion depending on result of this check.
   
   Do I need this at all? 0_o
   
   Static methods can also be overriden by that technique. =) But performance.

* Begining character "~" indicates abstact node type.


~Node
=====
INPUTS:
    ...
OUTPUTS:
    ...

~Geometry(Node)
==============
INPUTS:
    ...
OUTPUTS:
    ...

Cube(Geometry)
==============
INPUTS:
    float   size_x
    float   size_y
    float   size_x
    int     div_x
    int     div_y
    int     div_z
OUTPUTS:
    Mesh    out_mesh
    NURBS   out_nurbs

Sphere(Geometry)
================
INPUTS:
    float   radius
    int     segments
    int     slices
OUTPUTS:
    Mesh    out_mesh
    NURBS   out_nurbs
    
MeshOp(Node)
============
INPUTS:
    Mesh    in_mesh
OUTPUS:
    Mesh    out_mesh

Extrude(MeshOp)
===============
INPUTS:
    float           tx
    float           ty
    float           tz
    float           sx
    float           sy
    float           sz
    float           rx
    float           ry
    float           rz
    int             divisions
OUTPUTS:
    ...
    
FuncDeform(MeshOp)
==================
INPUTS:
    float:varying   func
OUTPUTS:
    ...

~GeometryView(Node)
===================
INPUTS:
    RenderGen generator
OUTPUTS:
    GeometryView    view

MeshView(GeometryView)
======================
INPUTS:
    Mesh in_mesh
OUTPUTS:
    ...

NURBSView(GeometryView)
=======================
INPUTS:
    ...
OUTPUTS:
    ...
    
~RenderGen
==========
INPUTS:
    ...
OUTPUTS:
    RenderGen generator
    
~RMGen(RenderGen) # RenderMan Geometry Generator
============
INPUTS
    ...
OUTPUTS:
    # RMGen   generator
    
~PovGen(RenderGen) # PovRay Geometry Generator
============
INPUTS
    ...
OUTPUTS:
    # PovGen   generator
    
~YafGen(RenderGen) # PovRay Geometry Generator
============
INPUTS
    ...
OUTPUTS:
    # YafGen   generator
    
~MRGen(RenderGen) # MentalRay Geometry Generator
============
INPUTS
    ...
OUTPUTS:
    # MRGen   generator
    
~Transform(Node)
================
INPUTS:
    Transform       parent
    GeometryView    view
OUTPUTS
    Transform       transform

EulerObject(Transform)
======================
INPUTS:
    float           tx
    float           ty
    float           tz
    float           sx
    float           sy
    float           sz
    float           rx
    float           ry
    float           rz
    TransformOrder  translate_order
    RotateOrder     rotate_order
OUTPUTS:
    ...
    
QuatObject(Transform)
=====================
INPUTS:
    float qx
    float qy
    float qz
    float qw
OUTPUTS:
    ...
    
AxisObject(Transform)
=====================
INPUTS:
    float ax
    float ay
    float az
    float aa
OUTPUTS:
    ...

Joint(Transform)
=================
INPUTS:
    ...
OUTPUTS:
    ...
